using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using TransportManagerLibrary.UtilityClass;
using MadinaWorkshop.DLL.Gateway;
using Microsoft.ApplicationBlocks.Data;
using System.IO;

namespace TransportManagerUI.UI.Workshop
{
    public partial class Supplier : System.Web.UI.Page
    {

        #region Private Method
        private DataTable GetAll(string searchKey)
        {
            try
            {
                DataTable dt = null;
                //DataTable dt2;
                string sql = @"select SupplierID,SupplierName,ContactName,Mobile,Email  from Supplier";

                dt = SqlHelper.ExecuteDataset(StringUtility.GetAppConnectionString(), CommandType.Text, sql).Tables[0];

                if (String.IsNullOrEmpty(searchKey))
                {

                }
                else
                {
                    var filtered = dt.AsEnumerable()
.Where(r => r.Field<String>("SupplierID").Contains(searchKey) || r.Field<String>("SupplierName").ToUpper().Contains(searchKey.ToUpper()));
                    dt = filtered.CopyToDataTable();

                }
                return dt;


            }
            catch (Exception ex)
            {
                //Logger.LogError(ex.ToString(), new object[0]);
                return null;
            }
        }
        private string Supplier_maxID()
        {
            String Sql = @"select ISNULL(Max(Convert(integer,RIGHT( SupplierID,3))), 0) + 1 from Supplier";

            DataTable dt = new DataTable();
            dt = SqlHelper.ExecuteDataset(StringUtility.GetAppConnectionString(), CommandType.Text, Sql).Tables[0];
            int count = int.Parse(dt.Rows[0][0].ToString());
            string NewSupplierNo = count.ToString().PadLeft(3, '0');

            return NewSupplierNo;

        }
        public void AutoGeneratedID()
        {
            txtSupplierID.Text = "S" + Supplier_maxID();

        }
        private void saveSupplier()
        {
            int ComCode = 1;

            string SupplierID = txtSupplierID.Text;
            if (string.IsNullOrEmpty(txtSupplierID.Text))
            {
                this.AutoGeneratedID();
                SupplierID = txtSupplierID.Text.Trim();
            }
            else
            {
                SupplierID = txtSupplierID.Text.Trim();
            }
            string SupplierName = txtSupplierName.Text.Trim();
            string ContactName = txtContactName.Text.Trim();

            string Add1 = txtAdd1.Text;
            string Add2 = txtAdd1.Text;
            string Add3 = txtAdd3.Text;
            string PostCode;
            if (string.IsNullOrEmpty(txtPostCode.Text))
            {
                PostCode = "";
            }
            else
            {
                PostCode = txtPostCode.Text.Trim();
            }
            string Phone = txtPhone.Text.Trim();
            string Fax;
            if (string.IsNullOrEmpty(txtFax.Text))
            {
                Fax = "";
            }
            else
            {
                Fax = txtFax.Text.Trim();
            }
            string Mobile;
            if (string.IsNullOrEmpty(txtMobile.Text))
            {
                Mobile = "";
            }
            else
            {
                Mobile = txtMobile.Text.Trim();
            }
            string Email;
            if (string.IsNullOrEmpty(txtEmail.Text))
            {
                Email = "";
            }
            else
            {
                Email = txtEmail.Text.Trim();
            }
            string WebAdress;
            
                WebAdress = txtWebAdd.Text;
           bool Status;
            if (CkActive.Checked == true)
            {
                Status = true;
            }
            else
            {
                Status = false;
            }

            string Remarks;
            if (string.IsNullOrEmpty(txtRemark.Text))
            {
                Remarks = "";
            }
            else
            {
                Remarks = txtRemark.Text;
            }

            int rowEffected = new SupplierGateway().InsertUpdateSupplier(ComCode, SupplierID, SupplierName, ContactName, Add1, Add2, Add3, PostCode, Phone, Fax, Mobile, Email, Status, WebAdress, Remarks);

            if (rowEffected > 0)
            {
                lblMsg.Text = " Data Saved.";
            }



        }
        private void loadData()
        {
            GridViewRow rows = gvlistofBasicData.SelectedRow;
            string code = rows.Cells[1].Text;

            string sql = @"select SupplierID,SupplierName,ContactName,Phone,Add1,Add2,Add3,PostCode,Fax,Mobile,Email,WebAdress,Remarks,Status  from Supplier where SupplierID=@SupplierId";
            DataTable dt;
            SqlParameter[] parameter ={
                                              new SqlParameter("@SupplierId", code),
                                            };
            dt = SqlHelper.ExecuteDataset(StringUtility.GetAppConnectionString(), CommandType.Text, sql, parameter).Tables[0];
            if (dt.Rows.Count > 0)
            {
                txtSupplierID.Text = dt.Rows[0]["SupplierID"].ToString();
                txtSupplierName.Text = dt.Rows[0]["SupplierName"].ToString();
                txtContactName.Text = dt.Rows[0]["ContactName"].ToString();
                txtPhone.Text = dt.Rows[0]["Phone"].ToString();
                txtAdd1.Text = dt.Rows[0]["Add1"].ToString();
                txtAdd2.Text = dt.Rows[0]["Add2"].ToString();
                txtAdd3.Text = dt.Rows[0]["Add3"].ToString();
                txtPostCode.Text = dt.Rows[0]["PostCode"].ToString();
                txtFax.Text = dt.Rows[0]["Fax"].ToString();
                txtMobile.Text = dt.Rows[0]["Mobile"].ToString();
                txtEmail.Text = dt.Rows[0]["Email"].ToString();
                txtWebAdd.Text = dt.Rows[0]["WebAdress"].ToString();
                txtRemark.Text = dt.Rows[0]["Remarks"].ToString();

                if (dt.Rows[0][13].ToString() == "True")
                {
                    CkActive.Checked = true;
                }
                else
                {
                    CkActive.Checked = false;
                }

            }

        }
        private void isAuthorizeToPage()
        {
            string url = Path.GetFileName(Request.Path);
            DataTable dt = new DataTable();
            if (Session["RoleMenu"] != null)
            {
                dt = (DataTable)(Session["RoleMenu"]);
                var filtered = dt.AsEnumerable().Where(r => r.Field<String>("menuUrl").Contains(url)).ToList();
                if (filtered.Count <= 0)
                {
                    Response.Redirect("~/UI/404.aspx");
                }

            }

        }
        private void clearAll()
        {
            foreach (Control control in Panel2.Controls)
            {
                if (control is TextBox)
                {
                    TextBox txt = (TextBox)control;
                    txt.Text = "";
                }
                if (control is Label)
                {
                    Label txt = (Label)control;
                    txt.Text = "";
                }
                if (control is DropDownList)
                {
                    DropDownList txt = (DropDownList)control;
                    txt.ClearSelection();
                }
                if (control is GridView)
                {
                    GridView txt = (GridView)control;
                    txt.DataSource = null;
                    txt.DataBind();
                }

            }

            foreach (Control control in Panel6.Controls)
            {
                if (control is TextBox)
                {
                    TextBox txt = (TextBox)control;
                    txt.Text = "";
                }
                if (control is Label)
                {
                    Label txt = (Label)control;
                    txt.Text = "";
                }
                if (control is DropDownList)
                {
                    DropDownList txt = (DropDownList)control;
                    txt.ClearSelection();
                }
                if (control is GridView)
                {
                    GridView txt = (GridView)control;
                    txt.DataSource = null;
                    txt.DataBind();
                }

            }

        }
        private bool isMandatoryFieldValidate()
        {
            if (String.IsNullOrEmpty(txtSupplierName.Text))
                return false;
            else
                return true;
        }
        #endregion
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                //if (Session["UserName"] == null)
                //{
                //    Session.Abandon();
                //    Response.Redirect("~/login.aspx");
                //}
                //isAuthorizeToPage();
                //lblMessage.Text = string.Empty;
                if (!IsPostBack && !IsCallback)
                {
                    
                }
            }
            catch (Exception ex)
            {
                throw;
                //Utilities.ShowMessageBox(
                //    ex.Data[Constant.CUSTOMMESSAGE] != null ? ex.Data[Constant.CUSTOMMESSAGE].ToString() : ex.Message,
                //    lblMessage, Color.Red);
            }
        }

        protected void btnAddNew_Click(object sender, EventArgs e)
        {
            clearAll();
        }

        protected void btnShowList_Click(object sender, EventArgs e)
        {
            DataTable dt = new DataTable();
            dt = GetAll(txtSearch.Text);

            gvlistofBasicData.DataSource = dt;
            gvlistofBasicData.DataBind();
            hfShowList_ModalPopupExtender.Show();
        }

        protected void btnSave_Click(object sender, EventArgs e)
        {
            saveSupplier();
        }

        protected void btnReport_Click(object sender, EventArgs e)
        {

        }

        protected void btnCancel_Click(object sender, EventArgs e)
        {
            Response.Redirect("~/UI/Default.aspx");
        }

        protected void btnSearch_Click(object sender, EventArgs e)
        {
            DataTable dt = new DataTable();
            dt = GetAll(txtSearch.Text);

            gvlistofBasicData.DataSource = dt;
            gvlistofBasicData.DataBind();
            hfShowList_ModalPopupExtender.Show();
        }

        protected void gvlistofBasicData_SelectedIndexChanged(object sender, EventArgs e)
        {
            loadData();
        }

        protected void gvlistofBasicData_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            DataTable dt = new DataTable();
            dt = GetAll(txtSearch.Text);

            gvlistofBasicData.PageIndex = e.NewPageIndex;
            gvlistofBasicData.DataSource = dt;
            gvlistofBasicData.DataBind();
            upListofbasicData.Update();
            hfShowList_ModalPopupExtender.Show();
        }
    }
}